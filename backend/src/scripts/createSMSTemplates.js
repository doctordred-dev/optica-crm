const mongoose = require('mongoose');
require('dotenv').config();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error.message);
    process.exit(1);
  }
};

// –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö SMS —à–∞–±–ª–æ–Ω–æ–≤
const createSMSTemplates = async () => {
  try {
    await connectDB();

    const SMSTemplate = require('../models/SMSTemplate');
    const User = require('../models/User');

    // –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤
    const admin = await User.findOne({ role: 'admin' });
    
    if (!admin) {
      console.error('‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
      process.exit(1);
    }

    // –ë–∞–∑–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã SMS
    const templates = [
      {
        name: '–ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤',
        template: '–î–æ–±—Ä—ã–π –¥–µ–Ω—å, {clientName}! –í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ. {shopName}, —Ç–µ–ª. {shopPhone}',
        triggerEvent: 'order_ready',
        description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞',
        availablePlaceholders: [
          'clientName',
          'orderNumber', 
          'shopName',
          'shopPhone',
          'shopAddress'
        ],
        isActive: true,
        createdBy: admin._id
      },
      {
        name: '–ó–∞–∫–∞–∑ –≤—ã–¥–∞–Ω',
        template: '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, {clientName}! –ó–∞–∫–∞–∑ ‚Ññ{orderNumber} –≤—ã–¥–∞–Ω. {shopName}',
        triggerEvent: 'order_delivered',
        description: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞—á–∏ –∑–∞–∫–∞–∑–∞',
        availablePlaceholders: [
          'clientName',
          'orderNumber',
          'totalPrice',
          'shopName'
        ],
        isActive: true,
        createdBy: admin._id
      },
      {
        name: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ',
        template: '{clientName}, –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –¥–æ–ø–ª–∞—Ç–µ {remainingPayment} –∑–∞ –∑–∞–∫–∞–∑. {shopName}, —Ç–µ–ª. {shopPhone}',
        triggerEvent: 'payment_reminder',
        description: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–ø–ª–∞—Ç—ã',
        availablePlaceholders: [
          'clientName',
          'orderNumber',
          'remainingPayment',
          'shopName',
          'shopPhone'
        ],
        isActive: true,
        createdBy: admin._id
      },
      {
        name: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
        template: '{clientName}, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –í–∞—Å! –°–∫–∏–¥–∫–∞ 10% –Ω–∞ –Ω–æ–≤—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é. {shopName}',
        triggerEvent: 'custom',
        description: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞',
        availablePlaceholders: [
          'clientName',
          'shopName',
          'shopPhone'
        ],
        isActive: true,
        createdBy: admin._id
      }
    ];

    console.log('üì± –°–æ–∑–¥–∞–Ω–∏–µ SMS —à–∞–±–ª–æ–Ω–æ–≤...');

    for (const templateData of templates) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —à–∞–±–ª–æ–Ω
      const existingTemplate = await SMSTemplate.findOne({ name: templateData.name });
      
      if (existingTemplate) {
        console.log(`‚ö†Ô∏è –®–∞–±–ª–æ–Ω "${templateData.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        continue;
      }

      const template = await SMSTemplate.create(templateData);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω: "${template.name}"`);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞
      const testData = {
        clientName: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
        orderNumber: '123456',
        totalPrice: '2500',
        remainingPayment: '1000',
        shopName: '–û–ø—Ç–∏–∫–∞',
        shopPhone: '+380501234567',
        shopAddress: '—É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 1'
      };
      
      const renderedMessage = template.render(testData);
      console.log(`   –ü—Ä–∏–º–µ—Ä: "${renderedMessage}"`);
      console.log(`   –î–ª–∏–Ω–∞: ${renderedMessage.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      console.log('');
    }

    console.log('üéâ –í—Å–µ SMS —à–∞–±–ª–æ–Ω—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('');
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã:');
    console.log('   {clientName} - –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞');
    console.log('   {orderNumber} - –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞');
    console.log('   {deliveryDate} - –¥–∞—Ç–∞ –≤—ã–¥–∞—á–∏');
    console.log('   {totalPrice} - –æ–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å');
    console.log('   {remainingPayment} - –æ—Å—Ç–∞—Ç–æ–∫ –∫ –¥–æ–ø–ª–∞—Ç–µ');
    console.log('   {shopName} - –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞');
    console.log('   {shopPhone} - —Ç–µ–ª–µ—Ñ–æ–Ω –º–∞–≥–∞–∑–∏–Ω–∞');
    console.log('   {shopAddress} - –∞–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è SMS —à–∞–±–ª–æ–Ω–æ–≤:', error.message);
  } finally {
    mongoose.connection.close();
  }
};

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createSMSTemplates();
