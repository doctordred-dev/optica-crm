#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é...\n');

const checks = [
  {
    name: 'package.json —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–∫—Ä–∏–ø—Ç—ã',
    check: () => {
      const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
      return pkg.scripts && pkg.scripts.start && pkg.engines;
    }
  },
  {
    name: 'Dockerfile —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
    check: () => fs.existsSync('Dockerfile')
  },
  {
    name: 'ecosystem.config.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
    check: () => fs.existsSync('ecosystem.config.js')
  },
  {
    name: 'railway.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
    check: () => fs.existsSync('railway.json')
  },
  {
    name: 'Health check endpoint –¥–æ–±–∞–≤–ª–µ–Ω',
    check: () => {
      const serverFile = fs.readFileSync('src/server.js', 'utf8');
      return serverFile.includes('/api/health');
    }
  },
  {
    name: 'env-template.txt —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
    check: () => fs.existsSync('env-template.txt')
  }
];

let allPassed = true;

checks.forEach(({ name, check }) => {
  const passed = check();
  console.log(`${passed ? '‚úÖ' : '‚ùå'} ${name}`);
  if (!passed) allPassed = false;
});

console.log('\n' + '='.repeat(50));

if (allPassed) {
  console.log('üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é!');
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub');
  console.log('2. –ó–∞–ø—É—à—å—Ç–µ –∫–æ–¥: git add . && git commit -m "Ready for deployment" && git push');
  console.log('3. –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –¥–µ–ø–ª–æ—è (Railway, Render, DigitalOcean)');
  console.log('4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  console.log('5. –°–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∞: npm run create-admin');
  console.log('\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ —Ñ–∞–π–ª–µ DEPLOYMENT.md');
} else {
  console.log('‚ùå –ü—Ä–æ–µ–∫—Ç –ù–ï –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é');
  console.log('–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–Ω–æ–≤–∞');
}

console.log('\nüîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:');
console.log('‚Ä¢ Railway: https://railway.app');
console.log('‚Ä¢ Render: https://render.com');
console.log('‚Ä¢ DigitalOcean: https://digitalocean.com');
console.log('‚Ä¢ MongoDB Atlas: https://cloud.mongodb.com');
